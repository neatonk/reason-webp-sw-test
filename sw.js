(function () {
'use strict';

function is_nil_undef(x) {
  if (x === null) {
    return /* true */1;
  } else {
    return +(x === undefined);
  }
}


/* No side effect */

// Generated by BUCKLESCRIPT VERSION 1.7.4, PLEASE EDIT WITH CARE
function accepts(mime, req) {
  var match = req.headers.get("accept");
  if (is_nil_undef(match)) {
    return /* false */0;
  } else {
    return +match.includes(mime);
  }
}

var jpeg_ext_re = (/\.jpe?g$/);

function response_no_cache(req) {
  var url = req.url;
  if (jpeg_ext_re.test(url) && accepts("webp", req)) {
    return fetch(url.replace(jpeg_ext_re, ".webp"), {
                mode: "no-cors"
              });
  } else {
    return fetch(req);
  }
}

function response(req) {
  return caches.match(req).then(function (x) {
                if (is_nil_undef(x)) {
                  var req$1 = req;
                  return response_no_cache(req$1).then(function (param) {
                              var req$2 = req$1;
                              var res = param;
                              var resClone = res.clone();
                              return caches.open("v1").then(function (param) {
                                            return param.put(req$2, resClone);
                                          }).then(function () {
                                          return Promise.resolve(res);
                                        });
                            });
                } else {
                  return Promise.resolve(x);
                }
              }).catch(function (param) {
              var req$1 = req;
              var err = param;
              console.log(err);
              return fetch(req$1);
            });
}

self.onfetch = function (evt) {
  evt.respondWith(response(evt.request));
  return /* () */0;
};


/* jpeg_ext_re Not a pure module */

}());
